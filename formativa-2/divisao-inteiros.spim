divfac:
   
    addi $sp, $sp, -16
    sw $t0, 0($sp)
    sw $t1, 4($sp)
    sw $t2, 8($sp)
    sw $t3, 12($sp)

    
    move $t0, $a0        
    move $t1, $a1        
    li $t2, 0            
    li $t3, 0           

    
    bltz $t0, negate_dividend
    j check_divisor

negate_dividend:
    sub $t0, $zero, $t0   
    addi $t3, $t3, 1      

check_divisor:
    
    bltz $t1, negate_divisor
    j perform_division

negate_divisor:
    sub $t1, $zero, $t1   
    addi $t3, $t3, 1     


perform_division:
   
    bgt $t1, $t0, finalize

    
    move $t4, $t1        
    li $t5, 0             

find_shift:
    sll $t4, $t4, 1       
    addi $t5, $t5, 1      
    blt $t4, $t0, find_shift

    sub $t5, $t5, 1       
    srl $t4, $t4, 1       

division_loop:
    
    blez $t5, finalize

    
    sub $t6, $t0, $t4     
    bltz $t6, skip_update
    move $t0, $t6         
    sll $t7, $zero, $t5   
    add $t2, $t2, $t7

skip_update:
    srl $t4, $t4, 1      
    sub $t5, $t5, 1       
    j division_loop

finalize:
    
    bgez $t0, check_sign
    add $t0, $t0, $t1     

check_sign:
   
    andi $t3, $t3, 1     
    beq $t3, $zero, set_result
    sub $t2, $zero, $t2   

set_result:
    
    move $hi, $t0
    move $lo, $t2

    
    lw $t0, 0($sp)
    lw $t1, 4($sp)
    lw $t2, 8($sp)
    lw $t3, 12($sp)
    addi $sp, $sp, 16

    jr $ra               
